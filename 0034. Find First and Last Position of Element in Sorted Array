class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        if not nums or target not in nums:
            return [-1, -1]

        left_ans = self.findLeft(nums, target)
        right_ans = self.findRight(nums, target)
        return [left_ans, right_ans]
    
    
    def findLeft(self, nums, target): 
        left, right = 0, len(nums) - 1
        
        while left + 1 < right:
            mid = left + (right - left) // 2
            if nums[mid] == target:
                right = mid
            elif nums[mid] < target:
                left = mid + 1
            else:
                right = mid - 1
                
        if (nums[left] == target):
            return left
        if (nums[right] == target):
            return right
        
        return -1
    
    
    def findRight(self, nums, target): 
        left, right = 0, len(nums) - 1
        
        while left + 1 < right:
            mid = left + (right - left) // 2
            if nums[mid] == target:
                left = mid
            elif nums[mid] < target:
                left = mid + 1
            else:
                right = mid - 1
                
        if (nums[right] == target):
            return right
        if (nums[left] == target):
            return left
        
        return -1
